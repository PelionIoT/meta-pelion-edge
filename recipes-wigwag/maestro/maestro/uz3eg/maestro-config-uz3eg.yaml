unixLogSocket: /tmp/grease.socket
sysLogSocket: /dev/log
linuxKernelLog: true
httpUnixSocket: /tmp/maestroapi.sock
configDBPath: /userdata/etc/maestroConfig.db
clientId: "{{ARCH_SERIAL_NUMBER}}"
network:
    disable: true
processes:
    reaper_interval: 1500
platform_readers:
  - platform: "fsonly"
    params:
      identityPath: "/userdata/edge_gw_config/identity.json"
var_defs:
   - key: "TMP_DIR"
     value: "/tmp"
   - key: "WIGWAG_NODE_PATH"
     value: "/wigwag/devicejs-core-modules/node_modules"
   - key: "WIGWAG_DIR"
     value: "/wigwag"
   - key: "NODE_EXEC"
     value: "/usr/bin/node"
   - key: "DEVICEJS_ROOT"
     value: "/wigwag/devicejs-ng"
   - key: "DEVJS_CORE_MODULES"
     value: "/wigwag/devicejs-core-modules"
   - key: "MAESTRO_RUNNER_DIR"
     value: "/wigwag/devicejs-core-modules/maestroRunner"
   - key: "SSL_CERTS_PATH"
     value: "/userdata/edge_gw_config/.ssl"
   - key: "LOCAL_DEVICEDB_PORT"
     value: 9000
   - key: "LOCAL_DATABASE_STORAGE_DIRECTORY"
     value: "/userdata/etc/devicejs/db"
   - key: "RELAY_VERSIONS_FILE"
     value: "/wigwag/etc/versions.json"
   - key: "FACTORY_VERSIONS_FILE"
     value: "/mnt/.overlay/factory/wigwag/etc/versions.json"
   - key: "USER_VERSIONS_FILE"
     value: "/mnt/.overlay/user/slash/wigwag/etc/versions.json"
   - key: "UPGRADE_VERSIONS_FILE"
     value: "/mnt/.overlay/upgrade/wigwag/etc/versions.json"
devicedb_conn_config:
    devicedb_uri: "https://{{ARCH_DEVICE_ID}}:9000" #default uri
    devicedb_prefix: "maestro.configs" #default prefix
    devicedb_bucket: "lww" #default bucket
    relay_id: "{{ARCH_DEVICE_ID}}" #default relay id
    ca_chain: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem" #default chain cert file name     
mdns:
  # disable: true
  static_records:
   - name: "WigWagRelay"
     service: "_wwservices._tcp"  # normally something like https or ftp
     # domain: "local"     # local is default
     interfaces: "eth0"
     not_interfaces: "Witap0"
     port: 3131
     text:
      - "wwid={{ARCH_SERIAL_NUMBER}}"
     hostname: "wigwaggateway"
   - name: "WigWagRelay_{{ARCH_SERIAL_NUMBER}}"
     service: "_wwservices._tcp"  # normally something like https or ftp
     # domain: "local"     # local is default
     interfaces: "eth0"
     not_interfaces: "Witap0"
     port: 3131
     text:
      - "wwid={{ARCH_SERIAL_NUMBER}}"
     hostname: "{{ARCH_SERIAL_NUMBER}}"
symphony:
# symphony system management APIs
    # defaults to 10:
    disable_sys_stats: true
    sys_stats_count_threshold: 15     # send if you have 15 or more stats queued
    sys_stats_time_threshold: 120000  # every 120 seconds send stuff, no matter what
    client_cert: "{{ARCH_CLIENT_CERT_PEM}}"
    client_key: "{{ARCH_CLIENT_KEY_PEM}}"
    host: "{{ARCH_GW_SERVICES_RESRC}}"
    url_logs: "{{ARCH_GW_SERVICES_URL}}/relay-logs/logs"
    url_stats: "{{ARCH_GW_SERVICES_URL}}/relay-stats/stats_obj"
    # port: "{{ARCH_RELAY_SERVICES_PORT}}"
targets:
   - file: "/wigwag/log/maestro_gw.log"
     rotate:
         max_files: 4
         max_file_size: 10000000  # 10MB max file size
         max_total_size: 42000000
         rotate_on_start: true
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - levels: warn
         format_pre: "\u001B[33m"    # yellow
         format_post: "\u001B[39m"
       - levels: error
         format_pre: "\u001B[31m"    # red
         format_post: "\u001B[39m"
   - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
     format_time: "\"timestamp\":%ld%03d, "
     format_level: "\"level\":\"%s\", "
     format_tag: "\"tag\":\"%s\", "
     format_origin: "\"origin\":\"%s\", "
     format_pre_msg: "\"text\":\""
     format_post: "\"},"
     flag_json_escape_strings: true
     filters:
       - levels: warn
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
       - levels: error
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
static_file_generators:
   - name: "devicedb"
     template_file: "/wigwag/etc/template/devicedb.template.conf"
     output_file: "/wigwag/etc/devicejs/devicedb.yaml"
   - name: "ca_pem"
     template: "{{ARCH_CA_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/ca.cert.pem"
   - name: "intermediate_pem"
     template: "{{ARCH_INTERMEDIATE_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
   - name: "client_key"
     template: "{{ARCH_CLIENT_KEY_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/client.key.pem"
   - name: "client_cert"
     template: "{{ARCH_CLIENT_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/client.cert.pem"
   - name: "server_key"
     template: "{{ARCH_SERVER_KEY_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/server.key.pem"
   - name: "server_cert"
     template: "{{ARCH_SERVER_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/server.cert.pem"
   - name: "ca_chain"
     template: "{{ARCH_CA_CHAIN_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem"
container_templates:
   - name: "deviceJS_process"
     immutable: true  # don't store in DB
     depends_on:
        - "devicejs"
     cgroup:                 # will implement later
        mem_limit: 10000000
     die_on_parent_death: true
     inherit_env: true
     add_env:
        - "LD_PRELOAD=/usr/lib/libcrypto.so.1.1"
        - "DEVJS_ROOT={{DEVICEJS_ROOT}}"
        - "DEVJS_CONFIG_FILE=/wigwag/etc/devicejs/devicejs.conf"
        - "NODE_PATH={{WIGWAG_NODE_PATH}}"
     exec_cmd: "{{NODE_EXEC}}"        # will use PATH if not absolute path (as per execvp())
     send_composite_jobs_to_stdin: true
     send_grease_origin_id: true
     exec_pre_args:
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
        - "{{MAESTRO_RUNNER_DIR}}/index.js"
     composite_config: >
        {
           "debug":true
        }
   - name: "ble_node_process"
     immutable: true  # don't store in DB
     depends_on:
        - "devicejs"
     cgroup:                 # will implement later
        mem_limit: 10000000
     die_on_parent_death: true
     inherit_env: true
     add_env:
        - "LD_PRELOAD=/usr/lib/libcrypto.so.1.1"
        - "DEVJS_ROOT={{DEVICEJS_ROOT}}"
        - "DEVJS_CONFIG_FILE=/wigwag/etc/devicejs/devicejs.conf"
        - "NODE_PATH={{WIGWAG_NODE_PATH}}"
     exec_cmd: "{{NODE_EXEC}}"        # will use PATH if not absolute path (as per execvp())
     send_composite_jobs_to_stdin: true
     send_grease_origin_id: true
     exec_pre_args:
        - "--max-old-space-size=1024"
        - "--max-semi-space-size=1"
        - "{{MAESTRO_RUNNER_DIR}}/index.js"
     composite_config: >
        {
           "debug":true
        }
   - name: "node_process"
     die_on_parent_death: true
     immutable: true  # don't store in DB
     cgroup:                 # will implement later
        mem_limit: 10000000
     inherit_env: true
     exec_cmd: "{{NODE_EXEC}}"        # will use PATH if not absolute path (as per execvp())
     exec_pre_args:
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
jobs:
   - job: "devicedb"
     immutable: true
     die_on_parent_death: true
     exec_cmd: "/wigwag/system/bin/devicedb"
     restart: true
     restart_limit: 5000
     restart_pause: 1
     exec_args:
        - "start"
        - "-conf=/wigwag/etc/devicejs/devicedb.yaml"
config_end: true
